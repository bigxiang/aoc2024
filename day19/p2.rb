# lines = [
#   "r, wr, b, g, bwu, rb, gb, br\n",
#   "\n",
#   "brwrr\n",
#   "bggr\n",
#   "gbbr\n",
#   "rrbgbr\n",
#   "ubwu\n",
#   "bwurrg\n",
#   "brgr\n",
#   "bbrgwb\n"
# ]

f = File.open(File.join(File.dirname(__FILE__), '/input.txt'))
lines = f.readlines

patterns = Set.new
designs = []
lines.each_with_index do |line, i|
  if i == 0
    patterns.merge(line.chomp.split(', '))
  elsif line != "\n"
    designs << line.chomp
  end
end

puts "patterns: #{patterns}}"
# puts "designs: #{designs}"

max_pattern_size = patterns.map { |p| p.size }.max
count = 0
# indexes = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 34, 35, 36,
#            37, 38, 39, 41, 44, 45, 46, 47, 48, 50, 52, 54, 55, 56, 57, 58, 60, 61, 64, 65, 66, 68, 74, 76, 78, 81, 84,
#            85, 86, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120,
#            121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145,
#            147, 148, 150, 152, 153, 156, 157, 158, 159, 160, 161, 162, 164, 166, 168, 169, 170, 171, 172, 173, 174, 176,
#            177, 178, 179, 180, 183, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 204, 205, 206,
#            207, 208, 209, 210, 211, 212, 214, 216, 217, 219, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 235,
#            236, 238, 239, 242, 243, 245, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 267,
#            269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 282, 283, 286, 287, 288, 290, 291, 292, 293, 296, 297,
#            298, 299, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 314, 316, 317, 318, 319, 320, 322, 324, 325, 327,
#            328, 329, 330, 332, 333, 335, 336, 338, 339, 340, 341, 343, 344, 347, 349, 351, 352, 354, 355, 356, 359, 360,
#            361, 363, 365, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 389, 390,
#            391, 392, 393, 395, 396, 397, 398]
designs.each do |design|
  design_count = Array.new(design.size + 1, 0)
  design_count[-1] = 1
  (design.size - 1).downto(0) do |i|
    (0..max_pattern_size - 1).each do |l|
      next if i + l >= design.size

      design_count[i] += design_count[i + l + 1] if patterns.include?(design[i..i + l])
    end
  end

  count += design_count[0]
end

puts "count: #{count}"
